.App {
  --grid-size: 15;
  --board-image: url(./assets/images/board-15.png);

  --app-text-color: hsl(0, 0%, 95%);
  --app-background-color: hsl(200, 30%, 50%);
  --app-background: linear-gradient(
    to right bottom,
    hsl(200, 30%, 50%),
    hsl(200, 30%, 40%)
  );
  --board-background-color: aliceblue;
  --board-shadow: 0 0 10px 0px rgb(0 0 0 / 50%);
  --opacity-hover-background-color: hsla(0, 0%, 0%, 0.1);
  --island-fill: hsl(50, 70%, 70%);
  --island-stroke-v: hsl(100, 50%, 50%);
  --island-stroke-x: hsl(0, 50%, 50%);
  --bridge-color: hsl(25deg 70% 30%);
  --contrast-color: black;

  --board-width: min(85vw, 450px);

  min-height: 100svh;
  font-size: 16px;
  user-select: none;

  color: var(--app-text-color);
  background-color: var(--app-background-color);
  background: var(--app-background);
  position: relative;
}
.App.hard-mode {
  --grid-size: 13;
  --board-image: url(./assets/images/board-13.png);
}
.App.dark-mode {
  --app-text-color: hsl(0, 0%, 85%);
  --app-background-color: hsl(200, 30%, 15%);
  --app-background: linear-gradient(
    to right bottom,
    hsl(200, 30%, 15%),
    hsl(200, 30%, 5%)
  );
  --board-background-color: hsl(200 100% 3%);
  --board-shadow: 0 0 10px 0px rgb(200 200 200 / 50%);
  --opacity-hover-background-color: hsla(0, 0%, 100%, 0.1);
  --island-fill: hsl(50, 50%, 50%);
  --island-stroke-v: hsl(100, 50%, 40%);
  --island-stroke-x: hsl(0, 50%, 40%);
  --bridge-color: hsl(25deg 50% 25%);
  --contrast-color: white;
}

.settings {
  top: 0.5rem;
  right: 0.5rem;
  position: absolute;
  padding: 0.5rem;
  width: 3.5rem;

  border-radius: 100vw;
  transition: background-color 1500ms;

  backdrop-filter: blur(5px);
  z-index: 1;

  & > svg {
    cursor: pointer;
    box-sizing: border-box;
    padding: 0.1rem;
    transition: rotate 300ms;
  }

  & > .settings-list-wrapper {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 300ms;

    font-size: 0.8rem;
    box-sizing: border-box;

    & > .settings-list {
      overflow: hidden;
      align-items: center;

      & p {
        margin-block: 0 0.3rem;
      }

      & .toggle {
        margin-bottom: 0.6rem;
        --toggle-width: 2.5rem;
        --toggle-bg-color: var(--app-text-color);
        --toggle-fg-color: var(--app-background-color);
        --toggle-check-color: hsl(160, 55%, 50%);
      }
    }
  }

  &[open] {
    background-color: var(--opacity-hover-background-color);
    transition: background-color 100ms;

    & svg {
      rotate: 60deg;
    }

    & > .settings-list-wrapper {
      grid-template-rows: 1fr;
    }
  }
}

.date {
  top: 2rem;
  left: 1rem;
  position: absolute;
  font-size: clamp(1.5rem, 4vw, 2rem);
  rotate: -15deg;
  line-height: 1;
  margin-block: 0;
}

.main-wrapper {
  display: grid;
  grid-template-areas: "title" "board" "done" "rules";
  column-gap: 2rem;
}

.page-title {
  grid-area: title;
  font-size: clamp(5rem, 22vw, 11rem);
  font-weight: 400;
  font-family: "Karantina";
  text-align: center;
  letter-spacing: 5px;
  line-height: 0.75;
  margin: 0;
  padding-block: 3rem 2rem;
  text-shadow: 3px 3px 5px hsla(0, 0%, 0%, 0.5);
}
.page-title::first-letter {
  letter-spacing: 0px;
}

.console {
  grid-area: board;
  align-self: center;
  max-width: fit-content;
  margin-inline: auto;
}

.board-wrapper {
  padding: clamp(8px, 2.25vw, 16px);
  border-radius: 1rem;
  background-color: var(--board-background-color);
  box-shadow: var(--board-shadow);
  transition: rotate 1s;
}
.board-wrapper.rotate {
  rotate: -360deg;
  transition: rotate 0s;
}

.board {
  width: var(--board-width);
  aspect-ratio: 1;
  position: relative;
  background-color: inherit;
}
.board::before {
  content: "";
  position: absolute;
  width: calc(100% / var(--grid-size) * (var(--grid-size) - 1));
  height: calc(100% / var(--grid-size) * (var(--grid-size) - 1));
  top: calc(100% / var(--grid-size) / 2);
  left: calc(100% / var(--grid-size) / 2);
  background-image: var(--board-image);
  background-size: cover;
  background-position: center;
  pointer-events: none;
}

.island {
  z-index: 2;
  cursor: pointer; 
  position: absolute;
  width: calc(100% / var(--grid-size));
  height: calc(100% / var(--grid-size));

  top: calc(100% / var(--grid-size) * var(--top-in-cells));
  left: calc(100% / var(--grid-size) * var(--left-in-cells));

  &[origin="true"] {
    filter: drop-shadow(0 0 2px var(--contrast-color));
  }
}
.island circle {
  fill: var(--island-fill);
}
.island.v circle {
  stroke: var(--island-stroke-v);
}
.island.x circle {
  stroke: var(--island-stroke-x);
}

.bridge {
  position: absolute;
  background-color: inherit;
  border-width: 0;
  border-style: solid;
  border-color: var(--bridge-color);

  top: calc(100% / var(--grid-size) * var(--top-in-cells));
  left: calc(100% / var(--grid-size) * var(--left-in-cells));
  --border-width: min(8px, calc(var(--board-width) / 75));

  &.h {
    translate: 0 -50%;
    width: calc(100% / var(--grid-size) * var(--length-in-cells));
    &.single {
      border-bottom-width: var(--border-width);
    }
    &.double {
      border-top-width: var(--border-width);
      border-bottom-width: var(--border-width);
      height: var(--border-width);
    }
  }

  &.v {
    translate: -50% 0;
    height: calc(100% / var(--grid-size) * var(--length-in-cells));
    &.single {
      border-right-width: var(--border-width);
    }
    &.double {
      border-right-width: var(--border-width);
      border-left-width: var(--border-width);
      width: var(--border-width);
    }
  }
}

.board-top {
  padding-inline: 0 0.5rem;
  margin-bottom: 0.5rem;
  justify-content: space-between;
  align-items: center;
}
.icon-button {
  display: flex;
  cursor: pointer;
  border-radius: 50%;
}
.icon-button svg {
  width: 2rem;
  padding: 0.3rem;
}
.timer {
  font-size: 1.5rem;
}
.pause {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 4;
  backdrop-filter: blur(7px) brightness(0.75);
  display: none;
  justify-content: center;
  align-items: center;
}
.pause[timerstate="pause"] {
  display: flex;
}
.pause svg {
  width: 20rem;
}

.done-wrapper {
  grid-area: done;
  text-align: center;
  margin-top: 2rem;
}
.done-button {
  font-size: 2.5rem;
  border-radius: 2rem;
  box-shadow: 0 0 5px 0px hsla(0, 0%, 100%, 0.5);
  border: 1px solid white;
  background-color: transparent;
  position: relative;
}
.done-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 2rem;
  background: linear-gradient(
    to bottom,
    hsla(0, 0%, 100%, 0.5),
    hsla(0, 0%, 100%, 0.1)
  );
}
.done-button:active::before {
  background: linear-gradient(
    to bottom,
    hsla(0, 0%, 100%, 0.55),
    hsla(0, 0%, 100%, 0.15)
  );
}

.how-to {
  grid-area: rules;
  width: var(--board-width);
  margin-inline: auto;
  padding-block: 1rem 2rem;

  & ul {
    padding-inline-start: 1.5em;
  }

  & li {
    line-height: 1.5;
  }

  & .icon {
    width: 1.5rem;
    padding-left: 0.5rem;
  }
}

.help {
  gap: 0.5rem;
}
.help p {
  margin: 0;
  line-height: 24px;
}

.example-modal {
  display: flex;
  flex-direction: column;
  align-items: center;

  color: var(--app-text-color);
  background-color: var(--app-background-color);
  background: var(--app-background);
  padding: 2rem;
  border-radius: 1rem;
}
.example-img-panel {
  align-items: center;
  gap: 1rem;
}
.example-img {
  width: min(25vw, 15rem);
  border-radius: 1rem;
}
.example-nav {
  width: 3rem;
  padding: 0.1rem;
  border-radius: 2rem;
}
.next {
  transform: scaleX(-1);
}
.example-modal p {
  margin-top: 1.5rem;
  margin-bottom: 0;
  text-align: center;
  max-width: 55ch;
}

@media (width > 500px) {
  .main-wrapper {
    grid-template-areas: "title board" "rules board" "done board";
    padding: 1rem;
    padding-top: 5rem;
    margin-inline: auto;
    width: fit-content;
  }
  .page-title {
    padding: 0;
    text-align: right;
  }
  .how-to {
    padding-bottom: 0;
  }
}

/* example board */

/* .App {
  --grid-size: 6;
  --board-image: url(./assets/images/board-example.png);
  --dropshadow: drop-shadow(0px 0px 10px black);
}
.App.dark-mode {
  --dropshadow: drop-shadow(0px 0px 10px white);
}

.board-wrapper {
  border-radius: unset;
  box-shadow: unset;
  padding: 2rem;
} */

/* 
boardStore:
  islands: initIslandsFromData(levelsExample["example-1"]) (export util)
Settings:
  // setIslands(getTodayLevel(isHardMode));
Bridge:
  const borderWidth = "13px";

.island {
  filter: var(--dropshadow);
}
*/
